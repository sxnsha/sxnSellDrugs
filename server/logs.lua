-- -- Configuration du webhook Discord
-- local WEBHOOK_URL = "https://discord.com/api/webhooks/1403263025410211980/HC-HsS9CKXbkaSd2dY7aWrdQS85YUoh_v19qkDVe_O6le3_qoRc24j4VH5u4jFBumroK" -- Remplacez par votre URL de webhook Discord

-- -- Configuration
-- local Config = {
--     webhook = {
--         enabled = true,
--         bot_name = "MDrugsales Bot",
--         bot_avatar = "https://i.imgur.com/4M34hi2.png",
--         colors = {
--             normal_sale = 15158332,  -- Rouge normal
--             cheating = 16711680,     -- Rouge vif
--             test = 65280             -- Vert
--         }
--     },
--     validZones = {
--         "BEACH", "DELBE", "DELPE", "BURTON", "DTVINE", "EAST_V", "MOVIE", 
--         "VESP", "VCANA", "LMESA", "ROCKF", "LEGSQU", "GOLF", "CHIL", 
--         "WVINE", "RGLEN", "RICHM", "SKID", "STAD", "BANHAMC", "BHAMCA", 
--         "MIRR", "PALETO", "SANDY", "VINE"
--     },
--     zoneNames = {
--         ["BEACH"] = "Vespucci Beach",
--         ["DELBE"] = "Del Perro Beach",
--         ["DELPE"] = "Del Perro",
--         ["BURTON"] = "Burton",
--         ["DTVINE"] = "Downtown Vinewood",
--         ["EAST_V"] = "East Vinewood",
--         ["MOVIE"] = "Richards Majestic",
--         ["VESP"] = "Vespucci",
--         ["VCANA"] = "Vespucci Canals",
--         ["LMESA"] = "La Mesa",
--         ["ROCKF"] = "Rockford Hills",
--         ["LEGSQU"] = "Legion Square",
--         ["GOLF"] = "GWC and Golfing Society",
--         ["CHIL"] = "Vinewood Hills",
--         ["WVINE"] = "West Vinewood",
--         ["RGLEN"] = "Richman Glen",
--         ["RICHM"] = "Richman",
--         ["SKID"] = "Mission Row",
--         ["STAD"] = "Maze Bank Arena",
--         ["BANHAMC"] = "Banham Canyon Dr",
--         ["BHAMCA"] = "Banham Canyon",
--         ["MIRR"] = "Mirror Park",
--         ["PALETO"] = "Paleto Bay",
--         ["SANDY"] = "Sandy Shore",
--         ["VINE"] = "Vinewood"
--     }
-- }

-- -- Fonction de test du webhook
-- function TestWebhook()
--     if not Config.webhook.enabled then
--         print("^1[MDrugsales] ^7Webhook d√©sactiv√© dans la configuration")
--         return
--     end
    
--     if not WEBHOOK_URL or WEBHOOK_URL == "" or WEBHOOK_URL == "https://discord.com/api/webhooks/1403263025410211980/HC-HsS9CKXbkaSd2dY7aWrdQS85YUoh_v19qkDVe_O6le3_qoRc24j4VH5u4jFBumroK" then
--         print("^1[MDrugsales] ^7Webhook URL non configur√©e pour le test")
--         return
--     end
    
--     local testEmbed = {
--         {
--             ["title"] = "üß™ Test du Webhook MDrugsales",
--             ["description"] = "Ce message confirme que le webhook fonctionne correctement !",
--             ["color"] = Config.webhook.colors.test,
--             ["footer"] = {
--                 ["text"] = "MDrugsales Test | " .. os.date("%d/%m/%Y √† %H:%M:%S")
--             },
--             ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
--         }
--     }
    
--     PerformHttpRequest(WEBHOOK_URL, function(err, text, headers)
--         if err == 200 then
--             print("^2[MDrugsales] ^7Test webhook r√©ussi !")
--         else
--             print("^1[MDrugsales] ^7Test webhook √©chou√©. Code d'erreur: " .. tostring(err))
--             print("^1[MDrugsales] ^7R√©ponse: " .. tostring(text))
--         end
--     end, 'POST', json.encode({
--         username = Config.webhook.bot_name,
--         embeds = testEmbed
--     }), { ['Content-Type'] = 'application/json' })
-- end

-- -- Commande pour tester le webhook
-- RegisterCommand('testwebhook', function(source, args, rawCommand)
--     if source == 0 then -- Commande console uniquement
--         TestWebhook()
--     else
--         print("^1[MDrugsales] ^7Cette commande ne peut √™tre ex√©cut√©e que depuis la console")
--     end
-- end)

-- -- Fonction pour obtenir les identifiants du joueur
-- function GetPlayerIdentifiers(source)
--     local identifiers = {
--         steam = "",
--         license = "",
--         discord = "",
--         fivem = "",
--         ip = ""
--     }
    
--     for i = 0, GetNumPlayerIdentifiers(source) - 1 do
--         local id = GetPlayerIdentifier(source, i)
--         if string.find(id, "steam:") then
--             identifiers.steam = id
--         elseif string.find(id, "license:") then
--             identifiers.license = id
--         elseif string.find(id, "discord:") then
--             identifiers.discord = id
--         elseif string.find(id, "fivem:") then
--             identifiers.fivem = id
--         elseif string.find(id, "ip:") then
--             identifiers.ip = id
--         end
--     end
    
--     return identifiers
-- end

-- -- Fonction pour envoyer le webhook
-- function SendDrugSaleWebhook(source, itemName, quantity, price, location)
--     if not Config.webhook.enabled then
--         return
--     end
    
--     if not WEBHOOK_URL or WEBHOOK_URL == "" or WEBHOOK_URL == "https://discord.com/api/webhooks/YOUR_WEBHOOK_URL_HERE" then
--         print("^1[MDrugsales] ^7Webhook URL non configur√©e dans logs.lua")
--         return
--     end

--     local xPlayer = ESX and ESX.GetPlayerFromId(source)
--     if ESX and not xPlayer then 
--         print("^1[MDrugsales] ^7Joueur non trouv√© dans ESX: " .. source)
--         return 
--     end
    
--     -- V√©rification de la position actuelle du joueur
--     local locationCheck = CheckPlayerLocationForSale(source)
--     local isCheating = not locationCheck.isValid
    
--     local identifiers = GetPlayerIdentifiers(source)
--     local playerName = GetPlayerName(source)
--     local rpName = (xPlayer and xPlayer.getName and xPlayer.getName()) or playerName or "Inconnu"
    
--     -- Formatage des identifiants pour l'affichage
--     local steamFormatted = identifiers.steam:gsub("steam:", "")
--     local discordId = identifiers.discord:gsub("discord:", "")
    
--     -- D√©terminer la couleur et le titre selon la situation
--     local color = isCheating and Config.webhook.colors.cheating or Config.webhook.colors.normal_sale
--     local title = isCheating and "üö® TRICHE PROBABLE - Vente de Drogue" or "üö® Vente de Drogue D√©tect√©e"
    
--     -- Cr√©ation des champs de base
--     local fields = {
--         {
--             ["name"] = "üë§ Informations Joueur",
--             ["value"] = string.format("**Nom RP:** %s\n**Pseudo:** %s", rpName or "Inconnu", playerName or "Inconnu"),
--             ["inline"] = true
--         },
--         {
--             ["name"] = "üÜî Identifiants",
--             ["value"] = string.format("**License:** `%s`\n**Steam:** `%s`\n**Discord:** `<@%s>`", 
--                 identifiers.license or "Inconnu",
--                 steamFormatted or "Inconnu",
--                 discordId or "Inconnu"
--             ),
--             ["inline"] = true
--         },
--         {
--             ["name"] = "üíä D√©tails de la Vente",
--             ["value"] = string.format("**Item:** %s\n**Quantit√©:** %d\n**Prix:** $%d", itemName, quantity, price),
--             ["inline"] = true
--         }
--     }
    
--     -- Ajouter les informations de localisation avec d√©tection de triche
--     if isCheating then
--         table.insert(fields, {
--             ["name"] = "‚ö†Ô∏è ALERTE TRICHE",
--             ["value"] = string.format("**Statut:** TRICHE PROBABLE\n**Zone Actuelle:** %s\n**Coordonn√©es:** x: %.2f, y: %.2f, z: %.2f", 
--                 GetLocationName(locationCheck.zone),
--                 locationCheck.coords.x,
--                 locationCheck.coords.y,
--                 locationCheck.coords.z
--             ),
--             ["inline"] = false
--         })
--         table.insert(fields, {
--             ["name"] = "üìç Zone D√©clar√©e",
--             ["value"] = string.format("**Zone:** %s", location or "Inconnu"),
--             ["inline"] = false
--         })
--     else
--         table.insert(fields, {
--             ["name"] = "üìç Localisation",
--             ["value"] = string.format("**Zone:** %s\n**Coordonn√©es:** x: %.2f, y: %.2f, z: %.2f", 
--                 location or "Inconnu",
--                 locationCheck.coords.x,
--                 locationCheck.coords.y,
--                 locationCheck.coords.z
--             ),
--             ["inline"] = false
--         })
--     end
    
--     -- Cr√©ation de l'embed Discord
--     local embed = {
--         {
--             ["title"] = title,
--             ["description"] = isCheating and "‚ö†Ô∏è **ATTENTION**: Le joueur a vendu de la drogue en dehors des zones autoris√©es!" or "Un joueur a vendu de la drogue",
--             ["color"] = color,
--             ["fields"] = fields,
--             ["footer"] = {
--                 ["text"] = "MDrugsales | " .. os.date("%d/%m/%Y √† %H:%M:%S")
--             },
--             ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
--         }
--     }
    
--     -- Envoi du webhook avec gestion d'erreur am√©lior√©e
--     PerformHttpRequest(WEBHOOK_URL, function(err, text, headers) 
--         if err ~= 200 then
--             print("^1[MDrugsales] ^7Erreur lors de l'envoi du webhook: " .. tostring(err))
--             print("^1[MDrugsales] ^7R√©ponse: " .. tostring(text))
--         else
--             print("^2[MDrugsales] ^7Webhook envoy√© avec succ√®s")
--         end
--     end, 'POST', json.encode({
--         username = Config.webhook.bot_name,
--         avatar_url = Config.webhook.bot_avatar,
--         embeds = embed
--     }), { ['Content-Type'] = 'application/json' })
-- end

-- -- Fonction pour convertir le nom de zone en fran√ßais
-- function GetLocationName(zone)
--     return Config.zoneNames[zone] or zone or "Zone Inconnue"
-- end

-- -- Fonction pour v√©rifier si une zone est autoris√©e pour la vente
-- function IsValidSellZone(zone)
--     for _, validZone in pairs(Config.validZones) do
--         if zone == validZone then
--             return true
--         end
--     end
--     return false
-- end

-- -- Fonction pour v√©rifier la localisation du joueur au moment de la vente
-- function CheckPlayerLocationForSale(source)
--     local playerPed = GetPlayerPed(source)
--     local coords = GetEntityCoords(playerPed)
--     local zone = GetZoneAtCoords(coords.x, coords.y, coords.z)
    
--     return {
--         coords = coords,
--         zone = zone,
--         isValid = IsValidSellZone(zone)
--     }
-- end